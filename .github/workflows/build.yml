name: Build

on:
  workflow_dispatch:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        system:
        - name: RaspiOS Lite 32 Bit, 11 (Bullseye), Pi 4b
          platform: linux-arm32
          cpu: cortex-a7
          base_image: https://downloads.raspberrypi.org/raspios_lite_armhf/images/raspios_lite_armhf-2023-05-03/2023-05-03-raspios-bullseye-armhf-lite.img.xz
          cpu_info: cpuinfo/raspberrypi_4b
        jdk:
        -  bootstrap: https://github.com/marchof/openjdk-arm32-build/releases/download/22.0.2-ga/jdk-linux-arm32.zip
           repository: openjdk/jdk23u
           ref: jdk-23-ga

    name: ${{ matrix.jdk.repository }}#${{ matrix.jdk.ref }} built on ${{ matrix.system.name }}

    steps:
    - name: Checkout OpenJDK
      uses: actions/checkout@v4
      with:
        repository: ${{ matrix.jdk.repository }}
        ref: ${{ matrix.jdk.ref }}
    
    - uses: pguyot/arm-runner-action@v2
      with:
        base_image: ${{ matrix.system.base_image }}
        cpu: ${{ matrix.system.cpu }}
        cpu_info: ${{ matrix.system.cpu_info }}
        bind_mount_repository: true
        image_additional_mb: 1024
        optimize_image: no
        commands: |
            # Install prerequisites
            lscpu
            lsb_release -a
            ldd --version
            apt-get update
            apt-get install -y \
              curl \
              ca-certificates \
              fontconfig \
              autoconf \
              file \
              g++ \
              gcc \
              libcups2-dev \
              libfontconfig1-dev \
              libasound2-dev \
              libx11-dev \
              libxext-dev \
              libxrender-dev \
              libxrandr-dev \
              libxtst-dev \
              libxt-dev \
              make \
              unzip \
              zip
            
            # Install Bootstrap JDK
            wget --no-verbose -O bootstrapjdk.zip ${{ matrix.jdk.bootstrap }}
            sudo mkdir /bootstrapjdk
            sudo unzip bootstrapjdk.zip -d /bootstrapjdk
            sudo ln -s /bootstrapjdk/bin/java /usr/bin/java
            rm bootstrapjdk.zip
            
            # Copy workspace to tmpfs mount, as ext4 will fail on 32bit
            workspace=$(pwd)
            mkdir -p /build
            mount -t tmpfs -o size=4096m tmpfs /build
            cp -r . /build
            cd /build
            
            # Run build
            bash configure --with-native-debug-symbols=none
            make images
            
            # Copy build result
            cp -Lr build/linux-arm-server-release/images/jdk $workspace
            cd $workspace
            
            # Try hard to unmount
            retries=0
            while ! umount -f /build ; do
                retries=$((retries + 1))
                if [ "${retries}" -ge 10 ]; then
                    echo "Could not unmount /build after ${retries} attempts, giving up."
                    exit 1
                fi
                sleep 10
            done
            
    - uses: actions/upload-artifact@v4
      with:
        name: jdk-${{ matrix.system.platform }}
        path: jdk/